apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "job-service.name" . }}
  namespace: {{ .Values.global.services.jobService.namespace }}
  labels:
    {{- include "job-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "job-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "job-service.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ .Values.containerPorts.grpcPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: JOB_SERVICE_GRPC_PORT
              value: "{{ .Values.containerPorts.grpcPort }}"
            - name: JOB_SERVICE_PORT
              value: "{{ .Values.containerPorts.httpPort }}"
            - name: DB_URL
              value: "{{ .Values.db.url }}"
            - name: DB_USERNAME
              value: "{{ .Values.db.username }}"
            - name: REDIS_HOST
              value: "{{ .Values.redis.host }}"
            - name: REDIS_PORT
              value: "{{ .Values.redis.port }}"
            - name: KAFKA_SERVER
              value: "{{ .Values.global.kafka.server }}"
            - name: JOB_SUBSCRIBE_SUCCESS
              value: "{{ .Values.kafka.jobSubscribeSuccess }}"
            - name: JOB_SUBSCRIBE_FAILED
              value: "{{ .Values.kafka.jobSubscribeFailed }}"
            - name: JOB_SUBSCRIBE_INITIALIZED
              value: "{{ .Values.kafka.jobSubscribeInitialized }}"
            - name: JOB_SUBSCRIBE_PROCESSED
              value: "{{ .Values.kafka.jobSubscribeProcessed }}"
            - name: CUSTOM_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.secretName }}
                  key: {{ .Values.secret.secretPasswordKey }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: {{ .Values.db.secretPasswordKey }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: {{ .Values.redis.secretPasswordKey }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
