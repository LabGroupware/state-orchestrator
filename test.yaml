apiVersion: v1
kind: Pod
metadata:
  name: test
  namespace: auth-service
  labels:
    app: test
spec:
  containers:
  - name: test
    image: ablankz/nova-web-gateway:1.0.1
    livenessProbe:
      httpGet:
        path: /actuator/health
        port: 8080
      initialDelaySeconds: 30
      periodSeconds: 30

    readinessProbe:
      httpGet:
        path: /actuator/health
        port: 8080
      initialDelaySeconds: 30
      periodSeconds: 30
    # resources:
    #   limits:
    #     memory: "256Mi"
    #     cpu: "500m"
    env:
    - name: AUTH_SEVER_PORT
      value: "8080"
    - name: DB_URL
      value: "jdbc:postgresql://auth-postgres-postgresql.auth-service.svc.cluster.local:5432/auth"
    - name: DB_USERNAME
      value: "svcuser"
    - name: REDIS_HOST
      value: "auth-redis-master.auth-service.svc.cluster.local"
    - name: REDIS_PORT
      value: "6379"
    - name: KAFKA_SERVER
      value: "kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    - name: CUSTOM_SECRET
      valueFrom:
        secretKeyRef:
          name: auth-app-secrets
          key: custom
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: auth-app-secrets
          key: jwt
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: auth-db-secrets
          key: password
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: auth-redis-secrets
          key: password
    volumeMounts:
    - name: auth-secrets-store
      mountPath: "/mnt/app-secrets-store"
      readOnly: true
  serviceAccountName: auth-sa
  volumes:
  - name: auth-secrets-store
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: "auth-app-secrets"

---
apiVersion: v1
kind: Service
metadata:
  name: test
  namespace: auth-service
spec:
  selector:
    app: test
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
